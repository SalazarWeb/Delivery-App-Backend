# ============================================
# Delivery App API - HTTP REST Client Tests
# ============================================
# Usa la extensión REST Client de VS Code
# o cualquier cliente HTTP compatible
# ============================================

@baseUrl = http://localhost:3000/api
@contentType = application/json

# Variables que se actualizan durante las pruebas
@authToken = 
@businessId = 
@productId = 

# ============================================
# 1. AUTENTICACIÓN - REGISTRO
# ============================================

### Registrar Usuario Empresa
POST {{baseUrl}}/auth/register
Content-Type: {{contentType}}

{
  "name": "Pizzería Roma",
  "email": "roma@example.com",
  "password": "Roma123!",
  "phone": "+56987654321",
  "type": "empresa"
}

### Registrar Usuario Cliente
POST {{baseUrl}}/auth/register
Content-Type: {{contentType}}

{
  "name": "Juan Pérez",
  "email": "juan@example.com",
  "password": "Juan123!",
  "phone": "+56912345678",
  "type": "cliente"
}

# ============================================
# 2. AUTENTICACIÓN - LOGIN
# ============================================

### Login Usuario Empresa
# @name loginEmpresa
POST {{baseUrl}}/auth/login
Content-Type: {{contentType}}

{
  "email": "roma@example.com",
  "password": "Roma123!"
}

### Login Usuario Cliente
# @name loginCliente
POST {{baseUrl}}/auth/login
Content-Type: {{contentType}}

{
  "email": "juan@example.com",
  "password": "Juan123!"
}

# ============================================
# 3. NEGOCIOS
# ============================================

### Crear Negocio
# Requiere autenticación de tipo "empresa"
POST {{baseUrl}}/businesses
Content-Type: {{contentType}}
Authorization: Bearer {{authToken}}

{
  "name": "Pizzería Roma Centro",
  "description": "Las mejores pizzas artesanales de la ciudad",
  "address": "Av. Libertador Bernardo O'Higgins 123, Santiago",
  "whatsappNumber": "+56987654321",
  "openingHours": {
    "lunes": { "open": "11:00", "close": "23:00" },
    "martes": { "open": "11:00", "close": "23:00" },
    "miércoles": { "open": "11:00", "close": "23:00" },
    "jueves": { "open": "11:00", "close": "23:00" },
    "viernes": { "open": "11:00", "close": "00:00" },
    "sábado": { "open": "12:00", "close": "00:00" },
    "domingo": { "open": "12:00", "close": "22:00" }
  }
}

### Listar Todos los Negocios (Público)
GET {{baseUrl}}/businesses

### Obtener Negocio por ID (Público)
GET {{baseUrl}}/businesses/{{businessId}}

### Obtener Mis Negocios
GET {{baseUrl}}/businesses/owner/me
Authorization: Bearer {{authToken}}

### Actualizar Negocio
PUT {{baseUrl}}/businesses/{{businessId}}
Content-Type: {{contentType}}
Authorization: Bearer {{authToken}}

{
  "name": "Pizzería Roma Centro - Actualizado",
  "description": "Las mejores pizzas artesanales con ingredientes premium"
}

### Eliminar Negocio
DELETE {{baseUrl}}/businesses/{{businessId}}
Authorization: Bearer {{authToken}}

# ============================================
# 4. PRODUCTOS
# ============================================

### Crear Producto
# Requiere autenticación de tipo "empresa"
POST {{baseUrl}}/products?businessId={{businessId}}
Content-Type: {{contentType}}
Authorization: Bearer {{authToken}}

{
  "name": "Pizza Margarita",
  "description": "Pizza clásica con tomate, mozzarella y albahaca fresca",
  "weightGrams": 500,
  "quantityUnits": 1,
  "price": 8990,
  "imageUrl": "https://example.com/images/pizza-margarita.jpg",
  "isAvailable": true
}

### Crear Producto - Pizza Pepperoni
POST {{baseUrl}}/products?businessId={{businessId}}
Content-Type: {{contentType}}
Authorization: Bearer {{authToken}}

{
  "name": "Pizza Pepperoni",
  "description": "Pizza con pepperoni premium y extra queso mozzarella",
  "weightGrams": 550,
  "price": 9990,
  "isAvailable": true
}

### Crear Producto - Pizza Napolitana
POST {{baseUrl}}/products?businessId={{businessId}}
Content-Type: {{contentType}}
Authorization: Bearer {{authToken}}

{
  "name": "Pizza Napolitana",
  "description": "Pizza con tomate, mozzarella, anchoas y orégano",
  "weightGrams": 520,
  "price": 10990,
  "imageUrl": "https://example.com/images/pizza-napolitana.jpg",
  "isAvailable": true
}

### Listar Todos los Productos (Público)
GET {{baseUrl}}/products

### Listar Productos por Negocio (Público)
GET {{baseUrl}}/products?businessId={{businessId}}

### Obtener Producto por ID (Público)
GET {{baseUrl}}/products/{{productId}}

### Actualizar Producto
PUT {{baseUrl}}/products/{{productId}}
Content-Type: {{contentType}}
Authorization: Bearer {{authToken}}

{
  "name": "Pizza Margarita Especial",
  "price": 10990,
  "description": "Pizza Margarita con mozzarella de búfala"
}

### Actualizar Disponibilidad del Producto
PUT {{baseUrl}}/products/{{productId}}
Content-Type: {{contentType}}
Authorization: Bearer {{authToken}}

{
  "isAvailable": false
}

### Eliminar Producto
DELETE {{baseUrl}}/products/{{productId}}
Authorization: Bearer {{authToken}}

# ============================================
# 5. REACCIONES
# ============================================

### Crear Reacción - Like
# Requiere autenticación (cualquier usuario)
POST {{baseUrl}}/reactions
Content-Type: {{contentType}}
Authorization: Bearer {{authToken}}

{
  "productId": "{{productId}}",
  "type": "like"
}

### Actualizar Reacción - Love
POST {{baseUrl}}/reactions
Content-Type: {{contentType}}
Authorization: Bearer {{authToken}}

{
  "productId": "{{productId}}",
  "type": "love"
}

### Actualizar Reacción - Dislike
POST {{baseUrl}}/reactions
Content-Type: {{contentType}}
Authorization: Bearer {{authToken}}

{
  "productId": "{{productId}}",
  "type": "dislike"
}

### Listar Reacciones de un Producto (Público)
GET {{baseUrl}}/reactions?productId={{productId}}

### Ver Mis Reacciones
GET {{baseUrl}}/reactions/my-reactions
Authorization: Bearer {{authToken}}

### Obtener Estadísticas de Reacciones (Público)
GET {{baseUrl}}/reactions/stats?productId={{productId}}

### Eliminar Mi Reacción
DELETE {{baseUrl}}/reactions?productId={{productId}}
Authorization: Bearer {{authToken}}

# ============================================
# 6. PRUEBAS DE VALIDACIÓN Y ERRORES
# ============================================

### Error: Registro sin campos requeridos
POST {{baseUrl}}/auth/register
Content-Type: {{contentType}}

{
  "name": "Test"
}

### Error: Login con credenciales incorrectas
POST {{baseUrl}}/auth/login
Content-Type: {{contentType}}

{
  "email": "noexiste@example.com",
  "password": "wrongpass"
}

### Error: Crear negocio sin autenticación
POST {{baseUrl}}/businesses
Content-Type: {{contentType}}

{
  "name": "Test Business"
}

### Error: Crear producto sin businessId
POST {{baseUrl}}/products
Content-Type: {{contentType}}
Authorization: Bearer {{authToken}}

{
  "name": "Test Product",
  "price": 1000
}

### Error: Precio negativo (validación)
POST {{baseUrl}}/products?businessId={{businessId}}
Content-Type: {{contentType}}
Authorization: Bearer {{authToken}}

{
  "name": "Test Product",
  "price": -1000
}

### Error: Reacción sin autenticación
POST {{baseUrl}}/reactions
Content-Type: {{contentType}}

{
  "productId": "{{productId}}",
  "type": "like"
}

# ============================================
# 7. FLUJO COMPLETO - E2E
# ============================================

### PASO 1: Registrar Empresa
# @name registroEmpresa
POST {{baseUrl}}/auth/register
Content-Type: {{contentType}}

{
  "name": "Restaurante Demo",
  "email": "demo@restaurant.com",
  "password": "Demo123!",
  "phone": "+56999999999",
  "type": "empresa"
}

### PASO 2: Login Empresa
# @name loginDemo
POST {{baseUrl}}/auth/login
Content-Type: {{contentType}}

{
  "email": "demo@restaurant.com",
  "password": "Demo123!"
}

# Copiar el access_token de la respuesta anterior y pegarlo en @authToken

### PASO 3: Crear Negocio
# @name crearNegocio
POST {{baseUrl}}/businesses
Content-Type: {{contentType}}
Authorization: Bearer {{authToken}}

{
  "name": "Burger King Demo",
  "description": "Hamburguesas deliciosas",
  "address": "Av. Demo 456",
  "whatsappNumber": "+56999999999",
  "openingHours": {
    "lunes": { "open": "10:00", "close": "22:00" }
  }
}

# Copiar el id de la respuesta anterior y pegarlo en @businessId

### PASO 4: Crear Producto
# @name crearProducto
POST {{baseUrl}}/products?businessId={{businessId}}
Content-Type: {{contentType}}
Authorization: Bearer {{authToken}}

{
  "name": "Whopper",
  "description": "Hamburguesa icónica",
  "price": 4990,
  "weightGrams": 290,
  "isAvailable": true
}

# Copiar el id de la respuesta anterior y pegarlo en @productId

### PASO 5: Registrar Cliente
# @name registroCliente
POST {{baseUrl}}/auth/register
Content-Type: {{contentType}}

{
  "name": "Cliente Demo",
  "email": "cliente@demo.com",
  "password": "Cliente123!",
  "phone": "+56988888888",
  "type": "cliente"
}

### PASO 6: Login Cliente
# @name loginClienteDemo
POST {{baseUrl}}/auth/login
Content-Type: {{contentType}}

{
  "email": "cliente@demo.com",
  "password": "Cliente123!"
}

# Actualizar @authToken con el token del cliente

### PASO 7: Cliente da Like al Producto
POST {{baseUrl}}/reactions
Content-Type: {{contentType}}
Authorization: Bearer {{authToken}}

{
  "productId": "{{productId}}",
  "type": "like"
}

### PASO 8: Ver Productos del Negocio (Público)
GET {{baseUrl}}/products?businessId={{businessId}}

### PASO 9: Ver Estadísticas de Reacciones
GET {{baseUrl}}/reactions/stats?productId={{productId}}

# ============================================
# INSTRUCCIONES DE USO
# ============================================
# 
# 1. Instala la extensión "REST Client" en VS Code
#    o usa Postman/Insomnia/Thunder Client
#
# 2. Inicia el servidor: pnpm start:dev
#
# 3. Actualiza las variables al principio del archivo:
#    - @baseUrl (si cambia el puerto)
#    - @authToken (después del login)
#    - @businessId (después de crear negocio)
#    - @productId (después de crear producto)
#
# 4. Haz clic en "Send Request" sobre cada ### para ejecutar
#
# 5. Para flujo E2E, ejecuta los pasos en orden y copia
#    los IDs/tokens de las respuestas
#
# ============================================
