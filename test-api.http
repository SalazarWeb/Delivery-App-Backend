### ============================================
### API Testing - Delivery App Backend
### ============================================
### Base URL
@baseUrl = http://localhost:3000/api
@contentType = application/json

### Variables (se actualizar√°n con las respuestas)
@authToken = 
@userId = 
@businessId = 
@productId = 

### ============================================
### 1. AUTH - Registro de Usuario
### ============================================

### Registrar Usuario Cliente
POST {{baseUrl}}/auth/register
Content-Type: {{contentType}}

{
  "email": "cliente@example.com",
  "password": "Password123!",
  "nombre": "Juan P√©rez",
  "telefono": "555-1234",
  "direccion": "Calle Principal 123",
  "tipo": "cliente"
}

### Registrar Usuario Empresa
POST {{baseUrl}}/auth/register
Content-Type: {{contentType}}

{
  "email": "empresa@example.com",
  "password": "Password123!",
  "nombre": "Restaurant El Buen Sabor",
  "telefono": "555-5678",
  "direccion": "Av. Comercial 456",
  "tipo": "empresa"
}

### ============================================
### 2. AUTH - Iniciar Sesi√≥n
### ============================================

### üå± Login con Usuario del Seed (RECOMENDADO PARA EMPEZAR)
# @name loginSeed
POST {{baseUrl}}/auth/login
Content-Type: {{contentType}}

{
  "email": "empresa@seed.com",
  "password": "Empresa123!"
}

###
# üí° TIP: Despu√©s de ejecutar pnpm seed, usa este login primero
# Copia el access_token y p√©galo en @authToken arriba

### Login Cliente
# @name loginCliente
POST {{baseUrl}}/auth/login
Content-Type: {{contentType}}

{
  "email": "cliente@example.com",
  "password": "Password123!"
}

### Login Empresa
# @name loginEmpresa
POST {{baseUrl}}/auth/login
Content-Type: {{contentType}}

{
  "email": "empresa@example.com",
  "password": "Password123!"
}

###
# Despu√©s de hacer login, copia el access_token y p√©galo en la variable @authToken arriba
# O usa: @authToken = {{loginEmpresa.response.body.access_token}}

### ============================================
### 3. BUSINESSES - Gesti√≥n de Negocios
### ============================================

### Crear Negocio (requiere token de usuario tipo empresa)
# @name createBusiness
POST {{baseUrl}}/businesses
Content-Type: {{contentType}}
Authorization: Bearer {{authToken}}

{
  "nombre": "Pizzer√≠a Don Giuseppe",
  "descripcion": "Las mejores pizzas artesanales de la ciudad",
  "categoria": "Restaurante",
  "direccion": "Calle Italia 789",
  "telefono": "555-9999",
  "horario": "Lun-Dom: 12:00-23:00",
  "imagen": "https://example.com/pizzeria.jpg"
}

### Crear Otro Negocio
POST {{baseUrl}}/businesses
Content-Type: {{contentType}}
Authorization: Bearer {{authToken}}

{
  "nombre": "Sushi Master",
  "descripcion": "Sushi fresco y aut√©ntico",
  "categoria": "Restaurante Japon√©s",
  "direccion": "Av. Oriental 321",
  "telefono": "555-7777",
  "horario": "Mar-Dom: 13:00-22:00",
  "imagen": "https://example.com/sushi.jpg"
}

### Listar Todos los Negocios (p√∫blico)
GET {{baseUrl}}/businesses
Content-Type: {{contentType}}

### Obtener Negocio por ID
GET {{baseUrl}}/businesses/{{businessId}}
Content-Type: {{contentType}}

### Listar Mis Negocios (requiere token)
GET {{baseUrl}}/businesses/my/businesses
Content-Type: {{contentType}}
Authorization: Bearer {{authToken}}

### Actualizar Negocio (requiere token y ser propietario)
PATCH {{baseUrl}}/businesses/{{businessId}}
Content-Type: {{contentType}}
Authorization: Bearer {{authToken}}

{
  "descripcion": "Las mejores pizzas artesanales de la ciudad - Ahora con delivery gratis",
  "horario": "Lun-Dom: 11:00-00:00"
}

### Eliminar Negocio (requiere token y ser propietario)
DELETE {{baseUrl}}/businesses/{{businessId}}
Authorization: Bearer {{authToken}}

### ============================================
### 4. PRODUCTS - Gesti√≥n de Productos
### ============================================

### Crear Producto (requiere token y ser propietario del negocio)
# @name createProduct
POST {{baseUrl}}/products
Content-Type: {{contentType}}
Authorization: Bearer {{authToken}}

{
  "nombre": "Pizza Margherita",
  "descripcion": "Pizza cl√°sica con tomate, mozzarella y albahaca fresca",
  "precio": 12.99,
  "imagen": "https://example.com/margherita.jpg",
  "disponible": true,
  "businessId": "{{businessId}}"
}

### Crear M√°s Productos
POST {{baseUrl}}/products
Content-Type: {{contentType}}
Authorization: Bearer {{authToken}}

{
  "nombre": "Pizza Pepperoni",
  "descripcion": "Pizza con abundante pepperoni y queso mozzarella",
  "precio": 14.99,
  "imagen": "https://example.com/pepperoni.jpg",
  "disponible": true,
  "businessId": "{{businessId}}"
}

###
POST {{baseUrl}}/products
Content-Type: {{contentType}}
Authorization: Bearer {{authToken}}

{
  "nombre": "Pizza Hawaiana",
  "descripcion": "Pizza con jam√≥n, pi√±a y queso",
  "precio": 13.99,
  "imagen": "https://example.com/hawaiana.jpg",
  "disponible": true,
  "businessId": "{{businessId}}"
}

### Listar Todos los Productos
GET {{baseUrl}}/products
Content-Type: {{contentType}}

### Listar Productos de un Negocio
GET {{baseUrl}}/products/business/{{businessId}}
Content-Type: {{contentType}}

### Obtener Producto por ID
GET {{baseUrl}}/products/{{productId}}
Content-Type: {{contentType}}

### Actualizar Producto (requiere token y ser propietario del negocio)
PATCH {{baseUrl}}/products/{{productId}}
Content-Type: {{contentType}}
Authorization: Bearer {{authToken}}

{
  "precio": 11.99,
  "descripcion": "Pizza cl√°sica con tomate San Marzano, mozzarella di bufala y albahaca fresca",
  "disponible": true
}

### Marcar Producto como No Disponible
PATCH {{baseUrl}}/products/{{productId}}
Content-Type: {{contentType}}
Authorization: Bearer {{authToken}}

{
  "disponible": false
}

### Eliminar Producto (requiere token y ser propietario del negocio)
DELETE {{baseUrl}}/products/{{productId}}
Authorization: Bearer {{authToken}}

### ============================================
### 5. REACTIONS - Reacciones a Productos
### ============================================

### Crear Reacci√≥n "like" (requiere token)
# @name createReaction
POST {{baseUrl}}/reactions
Content-Type: {{contentType}}
Authorization: Bearer {{authToken}}

{
  "productId": "{{productId}}",
  "type": "like"
}

### Crear Reacci√≥n "love"
POST {{baseUrl}}/reactions
Content-Type: {{contentType}}
Authorization: Bearer {{authToken}}

{
  "productId": "{{productId}}",
  "type": "love"
}

### Crear Reacci√≥n "dislike"
POST {{baseUrl}}/reactions
Content-Type: {{contentType}}
Authorization: Bearer {{authToken}}

{
  "productId": "{{productId}}",
  "type": "dislike"
}

### Cambiar Reacci√≥n (misma petici√≥n con diferente type)
POST {{baseUrl}}/reactions
Content-Type: {{contentType}}
Authorization: Bearer {{authToken}}

{
  "productId": "{{productId}}",
  "type": "love"
}

### Obtener Reacciones de un Producto
GET {{baseUrl}}/reactions/product/{{productId}}
Content-Type: {{contentType}}

### Obtener Estad√≠sticas de Reacciones de un Producto
GET {{baseUrl}}/reactions/product/{{productId}}/stats
Content-Type: {{contentType}}

### Obtener Reacciones de un Usuario (requiere token)
GET {{baseUrl}}/reactions/my
Content-Type: {{contentType}}
Authorization: Bearer {{authToken}}

### Eliminar Reacci√≥n (requiere token)
DELETE {{baseUrl}}/reactions/product/{{productId}}
Authorization: Bearer {{authToken}}

### ============================================
### 6. FLUJO COMPLETO DE PRUEBA
### ============================================

### PASO 1: Registrar Usuario Empresa
# @name registroEmpresa
POST {{baseUrl}}/auth/register
Content-Type: {{contentType}}

{
  "email": "test-empresa@example.com",
  "password": "Test123!",
  "nombre": "Test Restaurant",
  "telefono": "555-0000",
  "direccion": "Test Street 1",
  "tipo": "empresa"
}

### PASO 2: Login Empresa (copia el token)
# @name loginTest
POST {{baseUrl}}/auth/login
Content-Type: {{contentType}}

{
  "email": "test-empresa@example.com",
  "password": "Test123!"
}

### PASO 3: Crear Negocio (pega el token en @authToken)
# @name createTestBusiness
POST {{baseUrl}}/businesses
Content-Type: {{contentType}}
Authorization: Bearer {{authToken}}

{
  "nombre": "Test Pizzer√≠a",
  "descripcion": "Negocio de prueba",
  "categoria": "Restaurante",
  "direccion": "Test Ave 123",
  "telefono": "555-1111",
  "horario": "9:00-18:00"
}

### PASO 4: Crear Producto (copia businessId de la respuesta anterior)
# @name createTestProduct
POST {{baseUrl}}/products
Content-Type: {{contentType}}
Authorization: Bearer {{authToken}}

{
  "nombre": "Test Pizza",
  "descripcion": "Pizza de prueba",
  "precio": 9.99,
  "disponible": true,
  "businessId": "{{businessId}}"
}

### PASO 5: Registrar Usuario Cliente
# @name registroCliente
POST {{baseUrl}}/auth/register
Content-Type: {{contentType}}

{
  "email": "test-cliente@example.com",
  "password": "Test123!",
  "nombre": "Test Cliente",
  "telefono": "555-2222",
  "direccion": "Test Blvd 456",
  "tipo": "cliente"
}

### PASO 6: Login Cliente (actualiza el token)
# @name loginCliente2
POST {{baseUrl}}/auth/login
Content-Type: {{contentType}}

{
  "email": "test-cliente@example.com",
  "password": "Test123!"
}

### PASO 7: Reaccionar al Producto (usa token de cliente y productId)
POST {{baseUrl}}/reactions
Content-Type: {{contentType}}
Authorization: Bearer {{authToken}}

{
  "productId": "{{productId}}",
  "type": "love"
}

### PASO 8: Ver Estad√≠sticas del Producto
GET {{baseUrl}}/reactions/product/{{productId}}/stats
Content-Type: {{contentType}}

### ============================================
### 7. CASOS DE ERROR (para testing)
### ============================================

### Error: Registro con email duplicado
POST {{baseUrl}}/auth/register
Content-Type: {{contentType}}

{
  "email": "empresa@example.com",
  "password": "Password123!",
  "nombre": "Otro Nombre",
  "telefono": "555-0001",
  "direccion": "Otra Direcci√≥n",
  "tipo": "cliente"
}

### Error: Login con credenciales incorrectas
POST {{baseUrl}}/auth/login
Content-Type: {{contentType}}

{
  "email": "noexiste@example.com",
  "password": "WrongPassword"
}

### Error: Crear negocio sin token
POST {{baseUrl}}/businesses
Content-Type: {{contentType}}

{
  "nombre": "Negocio Sin Auth",
  "categoria": "Test"
}

### Error: Crear negocio siendo cliente
POST {{baseUrl}}/businesses
Content-Type: {{contentType}}
Authorization: Bearer {{authToken}}

{
  "nombre": "Negocio de Cliente",
  "categoria": "Test"
}

### Error: Crear producto con businessId inv√°lido
POST {{baseUrl}}/products
Content-Type: {{contentType}}
Authorization: Bearer {{authToken}}

{
  "name": "Producto Sin Negocio",
  "price": 10,
  "businessId": "00000000-0000-0000-0000-000000000000"
}

### Error: Reaccionar sin autenticaci√≥n
POST {{baseUrl}}/reactions
Content-Type: {{contentType}}

{
  "productId": "{{productId}}",
  "type": "like"
}

### ============================================
### 8. VALIDACIONES DE PRODUCTOS
### ============================================

### Error: Producto sin nombre (requerido)
POST {{baseUrl}}/products
Content-Type: {{contentType}}
Authorization: Bearer {{authToken}}

{
  "price": 10.99,
  "businessId": "{{businessId}}"
}

### Error: Producto con nombre vac√≠o
POST {{baseUrl}}/products
Content-Type: {{contentType}}
Authorization: Bearer {{authToken}}

{
  "name": "",
  "price": 10.99,
  "businessId": "{{businessId}}"
}

### Error: Producto con nombre muy corto (< 3 caracteres)
POST {{baseUrl}}/products
Content-Type: {{contentType}}
Authorization: Bearer {{authToken}}

{
  "name": "Pi",
  "price": 10.99,
  "businessId": "{{businessId}}"
}

### Error: Producto sin precio (requerido)
POST {{baseUrl}}/products
Content-Type: {{contentType}}
Authorization: Bearer {{authToken}}

{
  "name": "Pizza sin precio",
  "businessId": "{{businessId}}"
}

### Error: Producto con precio negativo
POST {{baseUrl}}/products
Content-Type: {{contentType}}
Authorization: Bearer {{authToken}}

{
  "name": "Pizza con precio negativo",
  "price": -5,
  "businessId": "{{businessId}}"
}

### Error: Producto con precio cero
POST {{baseUrl}}/products
Content-Type: {{contentType}}
Authorization: Bearer {{authToken}}

{
  "name": "Pizza gratis",
  "price": 0,
  "businessId": "{{businessId}}"
}

### Error: Producto con precio muy bajo (< 0.01)
POST {{baseUrl}}/products
Content-Type: {{contentType}}
Authorization: Bearer {{authToken}}

{
  "name": "Pizza muy barata",
  "price": 0.001,
  "businessId": "{{businessId}}"
}

### Error: Producto con URL de imagen inv√°lida
POST {{baseUrl}}/products
Content-Type: {{contentType}}
Authorization: Bearer {{authToken}}

{
  "name": "Pizza con imagen inv√°lida",
  "price": 12.99,
  "imageUrl": "not-a-valid-url",
  "businessId": "{{businessId}}"
}

### Error: Producto con peso menor a 1 gramo
POST {{baseUrl}}/products
Content-Type: {{contentType}}
Authorization: Bearer {{authToken}}

{
  "name": "Pizza sin peso",
  "price": 12.99,
  "weightGrams": 0,
  "businessId": "{{businessId}}"
}

### Error: Producto con cantidad menor a 1
POST {{baseUrl}}/products
Content-Type: {{contentType}}
Authorization: Bearer {{authToken}}

{
  "name": "Pizza sin cantidad",
  "price": 12.99,
  "quantityUnits": 0,
  "businessId": "{{businessId}}"
}

### Error: M√∫ltiples validaciones fallando
POST {{baseUrl}}/products
Content-Type: {{contentType}}
Authorization: Bearer {{authToken}}

{
  "name": "",
  "price": -5,
  "imageUrl": "imagen.jpg",
  "weightGrams": 0,
  "quantityUnits": -1,
  "businessId": "{{businessId}}"
}

### ============================================
### 9. NOTAS
### ============================================

###
### INSTRUCCIONES DE USO:
###
### 1. Aseg√∫rate de que el backend est√© corriendo: pnpm start:dev
###
### 2. Para usar las variables autom√°ticas (VS Code REST Client):
###    - Instala la extensi√≥n "REST Client"
###    - Las variables se actualizan autom√°ticamente con # @name
###
### 3. Flujo recomendado:
###    a) Ejecuta "Login Empresa" y copia el access_token
###    b) Pega el token en @authToken arriba
###    c) Ejecuta "Crear Negocio" y copia el id
###    d) Pega el id en @businessId arriba
###    e) Ejecuta "Crear Producto" y copia el id
###    f) Pega el id en @productId arriba
###    g) Ejecuta "Login Cliente" y actualiza @authToken
###    h) Ejecuta "Crear Reacci√≥n"
###
### 4. Tipos de reacci√≥n disponibles:
###    - "like"
###    - "love"
###    - "dislike"
###
### 5. Tipos de usuario:
###    - "cliente": Puede ver y reaccionar a productos
###    - "empresa": Puede crear negocios y productos
###
### 6. Todas las rutas requieren el prefijo /api
###
### ============================================
